<?xml version="1.0" encoding="utf-8"?>
<UserControl
    x:Class="InternalsViewer.UI.App.Controls.Page.MarkerTreeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:models="using:InternalsViewer.UI.App.Models"
    xmlns:selectors="using:InternalsViewer.UI.App.Helpers.Selectors"
    xmlns:controls1="using:InternalsViewer.UI.App.Controls"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style TargetType="controls:DataColumn">
            <Setter Property="FontSize" Value="12" />
        </Style>
        <Thickness x:Key="TreeViewItemPresenterMargin">0</Thickness>
        <Thickness x:Key="TreeViewItemPresenterPadding">0</Thickness>

        <Style TargetType="TreeViewItem">
            <!--
                The reason why the ControlTemplate is set is because the selection checkbox although not displayed takes up space and creates
                a large gap between the left edge of the TreeViewItem and the content. This is a workaround to remove that gap.
            
                The grid structure has been amended and the offending checkbox has been set to Visibility="Collapsed". It can't be removed
                as the control still refers to it.
            
                Non-relevant VisualStates have been removed to reduce the size of the template.
            -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <Grid x:Name="ContentPresenterGrid" 
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}" 
                              BorderThickness="{TemplateBinding BorderThickness}" 
                              Margin="{ThemeResource TreeViewItemPresenterMargin}" 
                              Padding="{ThemeResource TreeViewItemPresenterPadding}" 
                              CornerRadius="{TemplateBinding CornerRadius}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundPointerOver}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundPointerOver}" />
                                            <Setter Target="SelectionIndicator.Fill" Value="{ThemeResource TreeViewItemSelectionIndicatorForegroundPointerOver}" />
                                            <Setter Target="CollapsedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundPointerOver}" />
                                            <Setter Target="ExpandedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundPointerOver}" />
                                            <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushPointerOver}" />
                                            <Setter Target="SelectionIndicator.Opacity" Value="0" />
                                        </VisualState.Setters>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundPressed}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundPressed}" />
                                            <Setter Target="SelectionIndicator.Fill" Value="{ThemeResource TreeViewItemSelectionIndicatorForegroundPressed}" />
                                            <Setter Target="CollapsedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundPressed}" />
                                            <Setter Target="ExpandedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundPressed}" />
                                            <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushPressed}" />
                                            <Setter Target="SelectionIndicator.Opacity" Value="0" />
                                        </VisualState.Setters>
                                    </VisualState>

                                    <VisualState x:Name="Selected">
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelected}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelected}" />
                                            <Setter Target="SelectionIndicator.Fill" Value="{ThemeResource TreeViewItemSelectionIndicatorForeground}" />
                                            <Setter Target="CollapsedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelected}" />
                                            <Setter Target="ExpandedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelected}" />
                                            <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelected}" />
                                            <Setter Target="SelectionIndicator.Opacity" Value="1" />
                                        </VisualState.Setters>
                                    </VisualState>

                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelectedPointerOver}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPointerOver}" />
                                            <Setter Target="SelectionIndicator.Fill" Value="{ThemeResource TreeViewItemSelectionIndicatorForegroundPointerOver}" />
                                            <Setter Target="CollapsedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPointerOver}" />
                                            <Setter Target="ExpandedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPointerOver}" />
                                            <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelectedPointerOver}" />
                                            <Setter Target="SelectionIndicator.Opacity" Value="1" />
                                        </VisualState.Setters>
                                    </VisualState>

                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelectedPressed}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPressed}" />
                                            <Setter Target="SelectionIndicator.Fill" Value="{ThemeResource TreeViewItemSelectionIndicatorForegroundPressed}" />
                                            <Setter Target="CollapsedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPressed}" />
                                            <Setter Target="ExpandedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPressed}" />
                                            <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelectedPressed}" />
                                            <Setter Target="SelectionIndicator.Opacity" Value="1" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Rectangle x:Name="SelectionIndicator" Width="3" Height="16" Fill="{ThemeResource TreeViewItemSelectionIndicatorForeground}" Opacity="0" HorizontalAlignment="Left" VerticalAlignment="Center" RadiusX="2" RadiusY="2" />

                            <Grid x:Name="MultiSelectGrid" Margin="{ThemeResource TreeViewItemMultiSelectSelectedItemBorderMargin}" Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.Indentation}" BorderBrush="Transparent" BorderThickness="{ThemeResource TreeViewItemBorderThemeThickness}" CornerRadius="{ThemeResource ControlCornerRadius}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Grid x:Name="ExpandCollapseChevron" Grid.Column="0" Padding="0" Opacity="{TemplateBinding GlyphOpacity}" Background="Transparent" Visibility="Collapsed">
                                    <TextBlock x:Name="CollapsedGlyph" Foreground="{TemplateBinding GlyphBrush}" Width="Auto" Height="12" Padding="8,0,0,0"  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.CollapsedGlyphVisibility}" FontSize="{TemplateBinding GlyphSize}" Text="{TemplateBinding CollapsedGlyph}" FontFamily="{StaticResource SymbolThemeFontFamily}" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" IsTextScaleFactorEnabled="False" IsHitTestVisible="False" />
                                    <TextBlock x:Name="ExpandedGlyph" Foreground="{TemplateBinding GlyphBrush}" Width="Auto" Height="12"  Padding="8,0,0,0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.ExpandedGlyphVisibility}" FontSize="{TemplateBinding GlyphSize}" Text="{TemplateBinding ExpandedGlyph}" FontFamily="{StaticResource SymbolThemeFontFamily}" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" IsTextScaleFactorEnabled="False" IsHitTestVisible="False" />
                                </Grid>
                                <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" MinHeight="{ThemeResource TreeViewItemContentHeight}" Margin="{TemplateBinding Padding}" />
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RowHeader" TargetType="Border" >
            <Setter Property="Height" Value="34"/>
            <Setter Property="MinHeight" Value="22" />
            <Setter Property="Padding" Value="0,8,8,8" />
            <Setter Property="Background" Value="{ThemeResource LayerFillColorDefaultBrush }"/>
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
        </Style>

        <Style x:Key="HexStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="Consolas"/>
        </Style>

        <Style x:Key="TagTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Margin" Value="2,0,2,0"/>
            <Setter Property="Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}"/>
        </Style>

        <Style x:Key="TagContainerStyle" TargetType="ItemContainer">
            <Setter Property="Background" Value="{ThemeResource AccentFillColorDefaultBrush}"/>
            <Setter Property="Margin" Value="0,-12,0,0"/>
        </Style>

        <Style x:Key="PointerStyle" TargetType="HyperlinkButton">
            <Setter Property="Foreground" Value="{ThemeResource AccentTextFillColorSecondaryBrush}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="0,0,4,0"/>
        </Style>

        <Style TargetType="controls:HeaderedTreeView">
            <Setter Property="Background" Value="{ThemeResource LayerOnMicaBaseAltFillColorDefault}" />
        </Style>

        <selectors:MarkerTemplateSelector x:Key="ValueTemplateSelector" 
                                          DefaultTemplate="{StaticResource ValueDefaultTemplate}"
                                          PointerTemplate="{StaticResource ValuePointerTemplate}"/>

        <DataTemplate x:Key="ValuePointerTemplate" x:DataType="models:Marker">
            <HyperlinkButton Style="{StaticResource PointerStyle}"
                             Content="{x:Bind Value}" 
                             ToolTipService.ToolTip="Open Page"
                             Click="PageLink_Click"/>
        </DataTemplate>

        <DataTemplate x:Key="ValueDefaultTemplate" x:DataType="models:Marker">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" 
                           Text="{x:Bind Value}"
                           Style="{StaticResource ListTextBlock}"
                           TextTrimming="WordEllipsis"/>
                
                <controls1:CopyButton Content="&#xE8C8;" 
                                      Grid.Column="1"
                                      ToolTipService.ToolTip="Copy value to clipboard"
                                      Tag="{x:Bind Value}"
                                      Foreground="{ThemeResource CardBackgroundFillColorSecondaryBrush}"
                                      Click="CopyButton_Click" />
                
                <GridView Grid.Column="2"
                          SelectionMode="None"
                          ItemsSource="{x:Bind Tags}" 
                          x:Name="TagsItemView"
                          VerticalAlignment="Top"
                          Height="30"
                          Padding="0"
                          Margin="10,0"
                          VerticalContentAlignment="Top"
                          HorizontalAlignment="Left">
                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Spacing="0"/>
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="x:String">
                            <ItemContainer Style="{StaticResource TagContainerStyle}">
                                <TextBlock Text="{x:Bind}" Style="{StaticResource TagTextBlockStyle}" />
                            </ItemContainer>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </GridView>
                

            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TreeViewItemTemplate" x:DataType="models:Marker">
            <TreeViewItem ItemsSource="{x:Bind Children, Mode=OneWay}" 
                          IsExpanded="True"
                          Padding="8,0,0,0"
                          Margin="0"
                          Background="{ThemeResource LayerOnMicaBaseAltFillColorDefault}"
                          ScrollViewer.HorizontalScrollMode="Enabled"
                          ScrollViewer.HorizontalScrollBarVisibility="Visible"
                          ScrollViewer.IsHorizontalRailEnabled="True"
                          HorizontalAlignment="Left">
                <controls:DataRow>
                    <!--Name Column-->
                    <Grid Padding="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid Width="20"
                              Height="20"
                              Grid.Column="0"
                              Visibility="{x:Bind HasKey, Converter={StaticResource BoolToVisibilityConverter}}"
                              Background="{x:Bind BackColour, 
                                                  Converter={StaticResource ColorToSolidColorBrushValueConverter}}">
                            <TextBlock Grid.Column="0"              
                                       Text="00"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center"
                                       Foreground="{x:Bind ForeColour, 
                                       Converter={StaticResource ColorToSolidColorBrushValueConverter}}"
                                       Style="{StaticResource HexStyle}"/>
                        </Grid>
                        <TextBlock Grid.Column="1"
                                   Text="{x:Bind Name}" 
                                   Style="{StaticResource ListTextBlock}" 
                                   Margin="4,0,0,0"
                                   TextTrimming="WordEllipsis" />
                    </Grid>

                    <!--Value Column-->
                    <ContentControl ContentTemplateSelector="{StaticResource ValueTemplateSelector}" 
                                      Content="{x:Bind Mode=OneWay}"/>
                </controls:DataRow>
            </TreeViewItem>
        </DataTemplate>
    </UserControl.Resources>

    <Border BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1,0,1,1">
        <controls:HeaderedTreeView 
                                   x:Name="TreeView"
                                   ItemsSource="{x:Bind Markers, Mode=OneWay}" 
                                   SelectionMode="Single"
                                   SelectedItem="{x:Bind SelectedMarker, Mode=TwoWay}"
                                   Background="{ThemeResource LayerOnMicaBaseAltFillColorDefault}"
                                   VerticalAlignment="Stretch"
                                   ItemTemplate="{StaticResource TreeViewItemTemplate}">
        <controls:HeaderedTreeView.Header>
            <controls:DataTable ColumnSpacing="2">
                <controls:DataColumn Content="Name" MinWidth="120" CanResize="True" DesiredWidth="200" />
                <controls:DataColumn Content="Value" DesiredWidth="*" CanResize="True"/>
            </controls:DataTable>
        </controls:HeaderedTreeView.Header>
    </controls:HeaderedTreeView>
    </Border>
</UserControl>
